const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

/**
 * Enhanced FEELCYCLE„É≠„Ç∞„Ç§„É≥Ê©üËÉΩ
 * „É≠„Ç∞„Ç§„É≥Âæå„ÅÆ„Éû„Ç§„Éö„Éº„Ç∏ÊÉÖÂ†±ÂèñÂæó„Éª‰øùÂ≠òÊ©üËÉΩ‰ªò„Åç
 */
async function enhancedFeelcycleLogin(email, password, options = {}) {
  console.log('üöÄ Enhanced FEELCYCLE„É≠„Ç∞„Ç§„É≥ÈñãÂßã');
  
  const {
    saveHtml = true,
    saveScreenshot = true,
    extractUserInfo = true,
    outputDir = './mypage-data'
  } = options;
  
  let browser;
  try {
    // Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
      console.log(`üìÅ Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê: ${outputDir}`);
    }
    
    // 1. „Éñ„É©„Ç¶„Ç∂Ëµ∑Âãï
    browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    
    // 2. „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ
    console.log('üì± „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ‰∏≠...');
    await page.goto('https://m.feelcycle.com/mypage/login', {
      waitUntil: 'networkidle2',
      timeout: 60000
    });
    
    // 3. JavaScriptÂÆüË°åÂÆå‰∫ÜÂæÖÊ©ü
    console.log('‚è≥ JavaScriptË™≠„ÅøËæº„ÅøÂæÖÊ©ü‰∏≠...');
    await page.waitForFunction(() => {
      return document.readyState === 'complete' && 
             document.querySelector('input[name="email"]') !== null;
    }, { timeout: 30000 });
    
    // 4. „Éï„Ç©„Éº„É†ÂÖ•Âäõ
    console.log('üìù „É≠„Ç∞„Ç§„É≥ÊÉÖÂ†±ÂÖ•Âäõ‰∏≠...');
    await page.waitForSelector('input[name="email"]', { visible: true });
    await page.type('input[name="email"]', email);
    
    await page.waitForSelector('input[name="password"]', { visible: true });
    await page.type('input[name="password"]', password);
    
    // 5. „É≠„Ç∞„Ç§„É≥„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ
    console.log('üîê „É≠„Ç∞„Ç§„É≥ÂÆüË°å‰∏≠...');
    await page.click('button.btn1');
    
    // 6. „Éû„Ç§„Éö„Éº„Ç∏ÈÅ∑ÁßªÂæÖÊ©ü
    console.log('‚è≥ „Éû„Ç§„Éö„Éº„Ç∏ÈÅ∑ÁßªÂæÖÊ©ü‰∏≠...');
    await page.waitForNavigation({ 
      waitUntil: 'networkidle2', 
      timeout: 30000 
    });
    
    const currentUrl = page.url();
    const isSuccess = currentUrl.includes('/mypage') && !currentUrl.includes('/login');
    
    if (!isSuccess) {
      throw new Error(`„É≠„Ç∞„Ç§„É≥Â§±Êïó: ${currentUrl}`);
    }
    
    console.log('‚úÖ „É≠„Ç∞„Ç§„É≥ÊàêÂäü„ÄÅ„Éû„Ç§„Éö„Éº„Ç∏Âà∞ÈÅî');
    console.log('üìç ÁèæÂú®„ÅÆURL:', currentUrl);
    
    // 7. „Éû„Ç§„Éö„Éº„Ç∏ÊÉÖÂ†±ÂèñÂæó„Éª‰øùÂ≠ò
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const results = {
      success: true,
      url: currentUrl,
      timestamp: timestamp,
      data: {}
    };
    
    // HTML‰øùÂ≠ò
    if (saveHtml) {
      console.log('üíæ „Éû„Ç§„Éö„Éº„Ç∏HTML‰øùÂ≠ò‰∏≠...');
      const html = await page.content();
      const htmlPath = path.join(outputDir, `mypage-${timestamp}.html`);
      fs.writeFileSync(htmlPath, html, 'utf8');
      console.log(`‚úÖ HTML‰øùÂ≠òÂÆå‰∫Ü: ${htmlPath}`);
      results.data.htmlPath = htmlPath;
      results.data.htmlSize = html.length;
    }
    
    // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà‰øùÂ≠ò
    if (saveScreenshot) {
      console.log('üì∏ „Éû„Ç§„Éö„Éº„Ç∏„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà‰øùÂ≠ò‰∏≠...');
      const screenshotPath = path.join(outputDir, `mypage-${timestamp}.png`);
      await page.screenshot({ 
        path: screenshotPath, 
        fullPage: true 
      });
      console.log(`‚úÖ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà‰øùÂ≠òÂÆå‰∫Ü: ${screenshotPath}`);
      results.data.screenshotPath = screenshotPath;
    }
    
    // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±ÊäΩÂá∫
    if (extractUserInfo) {
      console.log('üë§ „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±ÊäΩÂá∫‰∏≠...');
      
      const userInfo = await page.evaluate(() => {
        const info = {};
        
        // „É¶„Éº„Ç∂„ÉºÂêçÂèñÂæó
        const nameSelectors = [
          '.user-name',
          '.member-name', 
          '[class*="name"]',
          'h1', 'h2', 'h3'
        ];
        
        for (const selector of nameSelectors) {
          const element = document.querySelector(selector);
          if (element && element.textContent.trim()) {
            info.name = element.textContent.trim();
            break;
          }
        }
        
        // ÊÆã„É¨„ÉÉ„Çπ„É≥Êï∞ÂèñÂæó
        const lessonSelectors = [
          '.lesson-count',
          '.remaining-lessons',
          '[class*="lesson"]',
          '[class*="count"]'
        ];
        
        for (const selector of lessonSelectors) {
          const element = document.querySelector(selector);
          if (element && element.textContent.includes('„É¨„ÉÉ„Çπ„É≥')) {
            info.remainingLessons = element.textContent.trim();
            break;
          }
        }
        
        // „É°„Éã„É•„ÉºÈ†ÖÁõÆÂèñÂæó
        const menuItems = Array.from(document.querySelectorAll('a, button')).map(el => ({
          text: el.textContent.trim(),
          href: el.href || null,
          className: el.className
        })).filter(item => item.text.length > 0 && item.text.length < 50);
        
        info.menuItems = menuItems;
        
        // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´
        info.pageTitle = document.title;
        
        // ÂÖ®„ÉÜ„Ç≠„Çπ„ÉàÂÜÖÂÆπÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
        info.allText = document.body.textContent.replace(/\s+/g, ' ').trim().substring(0, 1000);
        
        return info;
      });
      
      console.log('‚úÖ „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±ÊäΩÂá∫ÂÆå‰∫Ü');
      console.log('üë§ „É¶„Éº„Ç∂„ÉºÂêç:', userInfo.name || 'Êú™ÂèñÂæó');
      console.log('üìö ÊÆã„É¨„ÉÉ„Çπ„É≥:', userInfo.remainingLessons || 'Êú™ÂèñÂæó');
      console.log('üìã „É°„Éã„É•„ÉºÈ†ÖÁõÆÊï∞:', userInfo.menuItems?.length || 0);
      
      results.data.userInfo = userInfo;
      
      // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíJSON„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶‰øùÂ≠ò
      const jsonPath = path.join(outputDir, `userinfo-${timestamp}.json`);
      fs.writeFileSync(jsonPath, JSON.stringify(userInfo, null, 2), 'utf8');
      console.log(`‚úÖ „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±JSON‰øùÂ≠ò: ${jsonPath}`);
      results.data.jsonPath = jsonPath;
    }
    
    // 8. ËøΩÂä†„Éö„Éº„Ç∏Êé¢Á¥¢Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
    console.log('üîç Âà©Áî®ÂèØËÉΩ„Å™„Éö„Éº„Ç∏„É™„É≥„ÇØÊé¢Á¥¢‰∏≠...');
    const availableLinks = await page.evaluate(() => {
      return Array.from(document.querySelectorAll('a[href*="/mypage"]')).map(link => ({
        text: link.textContent.trim(),
        href: link.href,
        fullPath: link.getAttribute('href')
      })).filter(link => link.text.length > 0);
    });
    
    console.log('üîó Áô∫Ë¶ã„Åï„Çå„Åü„Éû„Ç§„Éö„Éº„Ç∏„É™„É≥„ÇØ:', availableLinks.length);
    availableLinks.forEach(link => {
      console.log(`  - ${link.text}: ${link.href}`);
    });
    
    results.data.availableLinks = availableLinks;
    
    return results;
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
    return {
      success: false,
      error: error.message,
      timestamp: new Date().toISOString()
    };
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

module.exports = { enhancedFeelcycleLogin };
