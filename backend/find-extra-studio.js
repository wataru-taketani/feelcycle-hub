const { DynamoDBClient } = require('@aws-sdk/client-dynamodb');
const { DynamoDBDocumentClient, ScanCommand } = require('@aws-sdk/lib-dynamodb');

const client = new DynamoDBClient({ region: 'ap-northeast-1' });
const docClient = DynamoDBDocumentClient.from(client);

async function findExtraStudio() {
  try {
    console.log('üîç ‰ΩôÂàÜ„Å™„Çπ„Çø„Ç∏„Ç™„ÇíÁâπÂÆö...');
    
    // Ê≠£„Åó„ÅÑ36„Çπ„Çø„Ç∏„Ç™„ÅÆ„É™„Çπ„ÉàÔºà„É¶„Éº„Ç∂„ÉºÊèê‰æõÔºâ
    const correctStudios = [
      { name: 'Êú≠Âπå', code: 'SPR' },
      { name: 'Â§ßÂÆÆ', code: 'OMY' },
      { name: 'Ë∂äË∞∑', code: 'KSG' },
      { name: 'Êüè', code: 'KSW' },
      { name: 'Êµ∑ÊµúÂπïÂºµ', code: 'KHM' },
      { name: 'ËàπÊ©ã', code: 'FNB' },
      { name: 'ÈäÄÂ∫ß‰∫¨Ê©ã', code: 'GKBS' },
      { name: 'ÈäÄÂ∫ß', code: 'GNZ' },
      { name: 'Ê±†Ë¢ã', code: 'IKB' },
      { name: 'Êñ∞ÂÆø', code: 'SJK' },
      { name: '‰∏äÈáé', code: 'UEN' },
      { name: '‰∏≠ÁõÆÈªí', code: 'NMG' },
      { name: 'Áî∫Áî∞', code: 'MCD' },
      { name: 'Ëá™Áî±„Åå‰∏ò', code: 'JYO' },
      { name: 'ÂêâÁ••ÂØ∫', code: 'KCJ' },
      { name: 'Â§öÊë©„Çª„É≥„Çø„Éº', code: 'TMC' },
      { name: 'Ê∏ãË∞∑', code: 'SBY' },
      { name: 'Ê±êÁïô', code: 'SDM' },
      { name: '‰∫îÂèçÁî∞', code: 'GTD' },
      { name: 'Â∑ùÂ¥é', code: 'KWS' },
      { name: 'Ê®™È†àË≥Ä‰∏≠Â§Æ', code: 'YSC' },
      { name: '‰∏äÂ§ßÂ≤°', code: 'KOK' },
      { name: 'Ê®™Êµú', code: 'YKH' },
      { name: 'Ê≠¶ËîµÂ∞èÊùâ', code: 'MKG' },
      { name: '„ÅÇ„Åñ„ÅøÈáé', code: 'AZN' },
      { name: '„ÅÇ„Åñ„ÅøÈáéPilates', code: 'AZNP' },
      { name: 'Â≤êÈòú', code: 'GIF' },
      { name: 'Ê†Ñ', code: 'SKE' },
      { name: 'ÂêçÂè§Â±ã', code: 'NGY' },
      { name: '‰∫¨ÈÉΩÊ≤≥ÂéüÁî∫', code: 'KTK' },
      { name: 'ÂøÉÊñéÊ©ã', code: 'SSB' },
      { name: 'Ê¢ÖÁî∞Ëå∂Â±ãÁî∫', code: 'UMDC' },
      { name: 'Â§ßÈò™‰∫¨Ê©ã', code: 'OKBS' },
      { name: '‰∏â„ÉéÂÆÆ', code: 'SMY' },
      { name: 'Â∫ÉÂ≥∂', code: 'HSM' },
      { name: 'È´òÊùæ', code: 'TKM' },
      { name: 'Á¶èÂ≤°Â§©Á•û', code: 'FTJ' }
    ];
    
    console.log(`üìù Ê≠£„Åó„ÅÑ„Çπ„Çø„Ç∏„Ç™Êï∞: ${correctStudios.length}`);
    
    // DynamoDB„Åã„ÇâÂèñÂæó
    const result = await docClient.send(new ScanCommand({
      TableName: 'feelcycle-hub-studios-dev'
    }));
    
    // ÈáçË§áÈô§Âéª
    const studioGroups = {};
    result.Items.forEach(studio => {
      const name = studio.studioName;
      if (!studioGroups[name]) {
        studioGroups[name] = [];
      }
      studioGroups[name].push(studio.studioCode);
    });
    
    const actualStudioNames = Object.keys(studioGroups).sort();
    const correctStudioNames = correctStudios.map(s => s.name).sort();
    
    console.log(`üìä DB„Å´„ÅÇ„Çã„É¶„Éã„Éº„ÇØ„Çπ„Çø„Ç∏„Ç™Êï∞: ${actualStudioNames.length}`);
    
    // ‰ΩôÂàÜ„Å™„Çπ„Çø„Ç∏„Ç™„ÇíÊ§úÂá∫
    console.log('\n‚ùå Ê≠£„Åó„ÅÑ„É™„Çπ„Éà„Å´„Å™„ÅÑ„Çπ„Çø„Ç∏„Ç™:');
    actualStudioNames.forEach(name => {
      if (!correctStudioNames.includes(name)) {
        console.log(`  ‚Ä¢ ${name} („Ç≥„Éº„Éâ: ${studioGroups[name].join(', ')})`);
      }
    });
    
    // ‰∏çË∂≥„Åó„Å¶„ÅÑ„Çã„Çπ„Çø„Ç∏„Ç™„ÇíÊ§úÂá∫
    console.log('\n‚ö†Ô∏è  DB„Å´„Å™„ÅÑ„Çπ„Çø„Ç∏„Ç™:');
    correctStudioNames.forEach(name => {
      if (!actualStudioNames.includes(name)) {
        console.log(`  ‚Ä¢ ${name}`);
      }
    });
    
    console.log('\nüìã „Åô„Åπ„Å¶„ÅÆDB„Çπ„Çø„Ç∏„Ç™:');
    actualStudioNames.forEach(name => {
      const codes = studioGroups[name];
      const isCorrect = correctStudioNames.includes(name);
      const status = isCorrect ? '‚úÖ' : '‚ùå';
      console.log(`  ${status} ${name} (${codes.join(', ')})`);
    });
    
  } catch (error) {
    console.log('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

findExtraStudio();